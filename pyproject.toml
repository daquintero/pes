[bdist_wheel]
universal = 1

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]

[flake8]
exclude = "docs"

[tool.poetry]
authors = ["Dario Quintero <darioaquintero@gmail.com>"]
classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Natural Language :: English",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "Topic :: Scientific/Engineering",
  "Topic :: Scientific/Engineering :: Physics"
]
description = "Photonic Integrated Electronics: microservices to codesign photonics, electronics, communications, quantum, and more."
homepage = "https://github.com/daquintero/piel"
keywords = ["piel"]
license = "MIT"
name = "piel"
#packages = [
#  {include = "piel/"},
#  {include = "docs/"}
#]
readme = "README.md"
repository = "https://github.com/daquintero/piel"
version = "0.0.56"

[tool.poetry.dependencies]
# CORE PACKAGES #
Click = ">=7.0"
amaranth = "^0.4.0"
amaranth-yosys = "^0.40.0.0.post94"
cocotb = "^1.8.1"
#cython = "0.29.21"
gdsfactory = {git = "https://github.com/daquintero/gdsfactory7.git", branch = "dario/fix_recursive_e_netlist"}
gplugins = {version = "^0.14.0", extras = ["schematic"]}
#femwell = "*"
hdl21 = {version = "^6.0.0"}
jax = "^0.4.14"
jaxlib = "^0.4.14"
matplotlib = {version = "*"}
networkx = "^3.1"
numpy = "^1.24.4"
openlane = {version = "^2.0.0"}
pandas = "^1.5.3"
poetry = {version = "1.8.2"}  # I am not happy with this being here
pydantic = "^2.0"
python = ">=3.10,<3.12"
qutip = "^4.7"
sax = "0.12.2"  # Pinned for pydantic <v2 compatibility.
scipy = "^1.11.4"
setuptools = "*"
sky130 = {git = "https://github.com/daquintero/skywater130.git", branch = "dario/patch_for_rladder_gplugins"}
sky130-hdl21 = {version = "^6.0.0"}
thewalrus = "^0.20.0"
vlsirtools = "^6.0.0"
xarray = ">=2023.12,<2025.0"

# Examples
# TODO FIX  ModuleNotFoundError: No module named 'setuptools' in nix
#amaranth_driven_flow = {path = "docs/examples/designs/amaranth_driven_flow", develop = true, optional = true}
#simple_copied_design = {path = "docs/examples/designs/simple_copied_design", develop = true, optional = true}
#simple_design = {path = "docs/examples/designs/simple_design", develop = true, optional = true}
#example_empty_project = {path = "docs/examples/designs/example_empty_project", develop = true, optional = true}

# DEVELOPMENT ONLY
black = {version = "24.3.0", optional = true}
bokeh = {version = "*", optional = true}
bump-my-version = {version = "*", optional = true}
cookiecutter = {version = "*", optional = true}
coverage = {version = "*", optional = true}
flake8 = {version = "*", optional = true}
ipyevents = {version = "*", optional = true}
ipytree = {version = "*", optional = true}
ipywidgets = {version = ">=7.6.0,<9", optional = true}
jupyter = {version = "*", optional = true}
jupyter-bokeh = {version = "*", optional = true}
jupyter-core = {version = "*", optional = true}
jupyter-packaging = {version = ">=0.7.9", optional = true}
jupyterlab = {version = "^4.0.0", optional = true}
jupytext = {version = "1.15.0", optional = true}
kfactory = {version = "*", extras = ["git", "ipy"], optional = true}
kweb = {version = "^2.0.1", optional = true}
myst-parser = {version = "*", optional = true}
nbsphinx = {version = "*", optional = true}
pandoc = {version = "*", optional = true}
pre-commit = {version = "*", optional = true}
pydata-sphinx-theme = {version = ">=0.13.3", optional = true}
pytest = {version = ">=3.0", optional = true}
sphinx = {version = "^7.2.1", optional = true}
sphinx-autoapi = {version = "*", optional = true}
sphinx-autobuild = {version = "*", optional = true}
sphinx-autodoc-typehints = {version = "*", optional = true}
sphinx-copybutton = {version = ">=0.5.2", optional = true}
sphinx-gallery = {version = "*", optional = true}
sphinx-pydantic = {version = "*", optional = true}
sphinx-rtd-theme = {version = "*", optional = true}
sphinx_book_theme = {version = "*", optional = true}
tox = {version = "*", optional = true}
watchdog = {version = "*", optional = true}


[tool.poetry.extras]
dev = [
  "amaranth_driven_flow",
  "black",
  "bokeh",
  "bump-my-version",
  "cookiecutter",
  "coverage",
  "example_empty_project",
  "flake8",
  "ipyevents",
  "ipytree",
  "ipywidgets",
  "jupyter",
  "jupyter-bokeh",
  "jupyter-core",
  "jupyter-packaging",
  "jupyterlab",
  "jupytext",
  "kfactory",
  "kweb",
  "myst-parser",
  "nbsphinx",
  "pandoc",
  "poetry",
  "pre-commit",
  "pytest",
  "pydata-sphinx-theme",
  "simple_copied_design",
  "simple_design",
  "sphinx",
  "sphinx-autoapi",
  "sphinx-autobuild",
  "sphinx-autodoc-typehints",
  "sphinx-book_theme",
  "sphinx-copybutton",
  "sphinx-gallery",
  "sphinx-pydantic",
  "sphinx-rtd-theme",
  "tox",
  "watchdog"
]
nonix = [
  "openlane"
]

[tool.poetry.scripts]
piel = "piel.cli:main"
poetry = "poetry.console.application:main"

[[tool.poetry.source]]
name = "pypi"
priority = "primary"

[[tool.poetry.source]]
name = "jaxsource"
priority = "supplemental"
url = "https://storage.googleapis.com/jax-releases/jax_releases.html"

[tool.pytest.ini_options]
addopts = "-rav"
minversion = "6.0"
testpaths = [
  "tests"
]
